{"remainingRequest":"/home/aldy/Documents/project/lelangin-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/aldy/Documents/project/lelangin-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/aldy/Documents/project/lelangin-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aldy/Documents/project/lelangin-app/src/components/Register.vue?vue&type=template&id=7bf3755a&scoped=true&","dependencies":[{"path":"/home/aldy/Documents/project/lelangin-app/src/components/Register.vue","mtime":1613816360184},{"path":"/home/aldy/Documents/project/lelangin-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/aldy/Documents/project/lelangin-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/aldy/Documents/project/lelangin-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/aldy/Documents/project/lelangin-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}